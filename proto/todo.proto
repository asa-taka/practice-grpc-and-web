syntax = "proto3";
package todo;

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";

message Todo {

  message Record {
    int32 id = 1;
    google.protobuf.Timestamp created_at = 2;
    string title = 3;
    string detail = 4;
    google.protobuf.Timestamp deadline = 5;
    enum Status {
      STATUS_TODO = 0;
      STATUS_INPROGRESS = 1;
      STATUS_DONE = 2;
    }
    Status status = 6;
  }

  message RecordInput {
    int32 id = 1;
    string title = 2;
    string detail = 3;
    google.protobuf.Timestamp deadline = 4;
  }

  // Query

  message GetRequest {
    int32 id = 1;
  }

  message GetResponse {
    Record record = 1;
  }

  message QueryRequest {
    google.protobuf.Timestamp start = 1;
    google.protobuf.Timestamp end = 2;
  }

  message QueryResponse {
    repeated Record records = 1;
  }

  // Mutation

  message CreateRequest {
    RecordInput record = 1;
  }

  message UpdateRequest {
    RecordInput record = 1;
    int32 id = 2; // for grpc-gateway
  }

  message DeleteRequest {
    int32 id = 1;
  }

  message MutateResponse {
    Record record = 1;
  }
}

service TodoService {
  rpc QueryTodo(Todo.QueryResponse) returns (Todo.QueryRequest) {
    option (google.api.http) = { get: "/v1/todo/records" };
  }
  rpc GetTodo(Todo.GetRequest) returns (Todo.GetResponse) {
    option (google.api.http) = { get: "/v1/todo/records/{id}" };
  }
  rpc CreateTodo(Todo.CreateRequest) returns (Todo.MutateResponse) {
    option (google.api.http) = { post: "/v1/todo/records", body: "*" };
  }
  rpc UpdateTodo(Todo.UpdateRequest) returns (Todo.MutateResponse) {
    option (google.api.http) = { put: "/v1/todo/records/{id}", body: "*" };
  }
  rpc DeleteTodo(Todo.DeleteRequest) returns (Todo.MutateResponse) {
    option (google.api.http) = { delete: "/v1/todo/records/{id}" };
  }
}